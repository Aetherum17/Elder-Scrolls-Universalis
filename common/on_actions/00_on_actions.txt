#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.

# country
on_startup = {

    emperor = { save_global_event_target_as = Emperor }
	if = { limit = { is_emperor_of_china = yes } save_global_event_target_as = EmperorOfChina }
	if = { limit = { has_dlc = "Cradle of Civilization" has_country_modifier = tur_janissary } remove_country_modifier = tur_janissary }

    events = {
		es_holidays.1
		es_holidays.2
		es_holidays.3
		es_holidays.4
		es_holidays.5
		es_holidays.6
		es_holidays.7
		es_holidays.8
		es_holidays.9
		es_holidays.10
		es_holidays.11
		es_holidays.12
		es_holidays.13
		es_holidays.14
		es_holidays.15
		es_holidays.16
		es_holidays.17
		es_holidays.18
		es_holidays.19
		es_holidays.20
		es_holidays.21
		es_holidays.22
		es_holidays.23
		es_holidays.24
		es_holidays.25
		es_holidays.26
		es_holidays.27
		es_holidays.28
		es_holidays.29
		es_holidays.30
		es_holidays.31
		es_holidays.32
		es_holidays.33
		es_holidays.34
		es_holidays.35
		es_holidays.36
		es_holidays.37
		es_holidays.38
		es_holidays.39
		es_holidays.40
		es_holidays.41
		es_holidays.42
		es_holidays.43
		es_holidays.44
		es_holidays.45
		es_holidays.46
		es_holidays.47
		es_holidays.48
		es_holidays.49
		es_holidays.50
		es_holidays.51
		es_holidays.52
		es_holidays.53
		es_holidays.54
		es_holidays.55
		es_holidays.56
		es_holidays.57
		es_holidays.58
		es_holidays.59
		es_holidays.60
		es_holidays.61
		es_holidays.62
		es_holidays.63
	}
	
	if = { limit = { NOT = { has_global_flag = on_action_set_up_global_flag } }
	
	RED = {
	    country_event = { id = es_start.2 days = 0 tooltip = es_collapse.2.a.tt }
		country_event = { id = es_start.3 days = 0 tooltip = es_collapse.2.a.tt }
		country_event = { id = es_start.4 days = 0 tooltip = es_collapse.2.a.tt }
		add_country_modifier = { name = "red_mountain_eruption" duration = 3650 }
        add_country_modifier = { name = "sand_storm_1" duration = 3650 }
        add_country_modifier = { name = "tropical_storm_1" duration = 3650 }	
        add_country_modifier = { name = "floods_1" duration = 3650 }	
        add_country_modifier = { name = "ice_age_1" duration = 3650 }		
		add_country_modifier = { name = "rise_time" duration = 3650 }
        add_country_modifier = { name = "crisis_time" duration = 3650 }	
        add_country_modifier = { name = "trade_time" duration = 3650 }
        every_province = { limit = { region = vvardenfell_lr } add_permanent_province_modifier = { name = "ever-ashland" duration = -1 } }	
	}
	
	every_province = {
	    limit = { is_city = yes }
		random_list = {
		    3 = { add_base_tax = 2 add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 2 add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 }
			3 = { add_base_tax = 1 add_base_manpower = 1 }
			3 = { add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 }
			3 = { add_base_production = 1 }
			3 = { add_base_manpower = 1 }
			3 = { add_base_tax = 2 add_base_production = 2 }
			3 = { add_base_tax = 2 add_base_production = 1 }
			3 = { add_base_tax = 1 add_base_production = 2 }
			3 = { add_base_tax = 1 add_base_production = 1 }
			3 = { add_base_tax = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_manpower = 1 }
			3 = { add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_production = 1 add_base_manpower = 1 }
			3 = { }
		}
	}
	
	every_province = {
	    limit = { is_city = no }
		random_list = {
		    3 = { add_base_tax = 2 add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 2 add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_production = 1 }
			3 = { add_base_tax = 1 add_base_manpower = 1 }
			3 = { add_base_production = 1 add_base_manpower = 1 }
			3 = { add_base_tax = 1 }
			3 = { add_base_production = 1 }
			3 = { add_base_manpower = 1 }
			3 = { add_base_tax = 2 add_base_production = 2 }
			3 = { add_base_tax = 2 add_base_production = 1 }
			3 = { add_base_tax = 1 add_base_production = 2 }
			3 = { add_base_tax = 1 add_base_production = 1 }
			3 = { add_base_tax = 2 add_base_manpower = 2 }
			3 = { add_base_tax = 2 add_base_manpower = 1 }
			3 = { add_base_tax = 1 add_base_manpower = 2 }
			3 = { add_base_tax = 1 add_base_manpower = 1 }
			3 = { add_base_production = 2 add_base_manpower = 2 }
			3 = { add_base_production = 2 add_base_manpower = 1 }
			3 = { add_base_production = 1 add_base_manpower = 2 }
			3 = { add_base_production = 1 add_base_manpower = 1 }
			3 = { }
		}
	}
	
	set_global_flag = on_action_set_up_global_flag
	}

	if = { limit = { NOT = { has_country_flag = on_action_setup_flag } }
	
	every_country = { limit = { ai = no NOT = { has_country_flag = es_1_start_flag } } country_event = { id = es_start.1 days = 0 tooltip = es_collapse.2.a.tt } set_country_flag = es_1_start_flag }
	
	if = { limit = { NOT = { has_dlc = "Dharma" } is_emperor_of_china = yes } set_legacy_government = celestial_empire_legacy }
	
	if = { limit = { government = tribal has_dlc = "Dharma" }
		random_list = {
		35 = { add_government_reform = steppe_horde }
		15 = { add_government_reform = tribal_federation }
		15 = { add_government_reform = tribal_kingdom }
		15 = { add_government_reform = tribal_despotism }
		5 = { add_government_reform = nomad_state_reform }
		5 = { add_government_reform = war_against_the_world_reform }
		5 = { add_government_reform = tribal_republic }
		5 = { add_government_reform = tribal_theocratic_state }
		}
	}
	
	if = { limit = { government = tribal NOT = { has_dlc = "Dharma" } }
		random_list = {
		35 = { set_legacy_government = steppe_horde_legacy }
		15 = { set_legacy_government = tribal_federation_legacy }
		15 = { set_legacy_government = tribal_kingdom_legacy }
		15 = { set_legacy_government = tribal_despotism_legacy }
		5 = { set_legacy_government = nomad_state_legacy }
		5 = { set_legacy_government = war_against_the_world_legacy }
		5 = { set_legacy_government = tribal_republic_legacy }
		5 = { set_legacy_government = tribal_theocratic_state_legacy }
		}
	}
	
	if = { limit = { government = monarchy NOT = { has_dlc = "Dharma" } }
		random_list = {
		35 = { set_legacy_government = despotic_monarchy }
		15 = { set_legacy_government = english_monarchy_legacy }
		15 = { set_legacy_government = mamluk_government_legacy }
		15 = { set_legacy_government = elective_monarchy_legacy }
		5 = { set_legacy_government = mughal_government_legacy }
		5 = { set_legacy_government = pirate_kingdom_legacy }
		5 = { set_legacy_government = ottoman_government_legacy }
		5 = { set_legacy_government = shogunate_legacy }
		}
	}
	
	if = { limit = { government = republic NOT = { has_dlc = "Dharma" } }
		random_list = { 
		35 = { set_legacy_government = dutch_republic_legacy }
		15 = { set_legacy_government = merchant_republic }
		15 = { set_legacy_government = oligarchic_republic }
		15 = { set_legacy_government = noble_republic }
	    5 = { set_legacy_government = pirate_republic }
		5 = { set_legacy_government = bureaucratic_despotism }
		5 = { set_legacy_government = consortium_republic }
		5 = { set_legacy_government = peasants_republic_legacy }
		}
	}
	
	if = { limit = { government = theocracy NOT = { has_dlc = "Dharma" } }
		random_list = {
		35 = { set_legacy_government = theocratic_government }
		15 = { set_legacy_government = monastic_order_government }
		15 = { set_legacy_government = papal_government }
		15 = { set_legacy_government = holy_republic_government }
		5 = { set_legacy_government = religious_republic_government }
		5 = { set_legacy_government = college_of_mages_government }
		5 = { set_legacy_government = secret_order_government }
		5 = { set_legacy_government = holy_city_government }
		}
	}
	
	if = { limit = { culture_group = orsimer_cg }
		add_country_modifier = { name = "orcish_fury" duration = 3650 }	
		add_country_modifier = { name = "orcish_fury_timer" duration = 9125 hidden = yes }
		every_neighbor_country = { limit = { ai = no NOT = { culture_group = orsimer_cg } } country_event = { id = es_orcish_flavour.5 days = 31 tooltip = es_orcish_flavour.5.a.tt } }
	}
		
	add_country_modifier = { name = "es_female_advisors" duration = -1 hidden = yes }
	
	if = { limit = { is_year = 266 } set_global_flag = ayleid_fall_flag }
	if = { limit = { is_year = 369 } set_global_flag = marukhism_flag }
	if = { limit = { is_year = 242 } set_global_flag = etherial_crisis_flag set_global_flag = alessian_rebellion_flag }
	if = { limit = { is_year = 609 } set_global_flag = fall_of_direnii_flag }
	if = { limit = { is_year = 750 } set_global_flag = dwemer_dissapearence_flag }
	if = { limit = { is_year = 810 } set_global_flag = redguard_migration_flag set_global_flag = foundation_of_wayres_flag }
	
	add_legitimacy = 100
	add_republican_tradition = 100
	add_devotion = 100
	add_horde_unity = 100
	add_meritocracy = 100
	
	init_variables = yes
	
	if = { 
		limit = { 
			any_owned_province = {
				has_port = yes
			}
		}
		set_country_flag = started_with_port
	}			 
	set_country_flag = on_action_setup_flag
	}
	initialize_schools_effect = yes
}

# country
on_religion_change = {
	on_religion_change_estate_privileges_effect = yes
	###removes catholic modifiers
		remove_country_modifier = counter_reformation
		remove_country_modifier = the_statue_in_restraint_of_appeals
		remove_country_modifier = revocation_of_restraint_of_appeals
		remove_country_modifier = bavarian_jesuits
		remove_country_modifier = the_societas_jesu
		remove_country_modifier = the_declaration_of_indulgence
		remove_country_modifier = de_heretico_comburendo
		remove_country_modifier = the_conventicle_act

																				  
 
	if = { 
	limit = {
	government = native
	OR = { religion = serpant_king religion = tang_mo_pantheon religion = kamal_pantheon }
	}
	change_government = monarchy
	add_government_reform = autocracy_reform								
	}
											  
	if = {
		limit = {
			has_heir = yes
		}
		set_heir_religion = ROOT
	}
	if = {
		limit = {
			has_regency = no
		}
		set_ruler_religion = ROOT
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			has_consort = yes
		}
		set_consort_religion = ROOT
	}
	add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}
	events = {
		muslim_school_events.20 #Pick School
		propagate_religion_events.7 #Propagated Country is now Muslim												   
	}
}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_shiite_settled_in_capital }
		remove_province_modifier = tengri_shiite_settled_in_capital
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_insincere_leadership }
		remove_province_modifier = tengri_insincere_leadership
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_religious_influx }
		remove_province_modifier = tengri_religious_influx
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_ruler_questioned }
		remove_province_modifier = tengri_ruler_questioned
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_strengthened_local_clans }
		remove_province_modifier = tengri_strengthened_local_clans
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_growing_cities }
		remove_province_modifier = tengri_growing_cities
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_christian_mission }
		remove_province_modifier = tengri_christian_mission
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_unchristian_values }
		remove_province_modifier = tengri_unchristian_values
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = hindufication }
		remove_province_modifier = hindufication
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_influx_of_monks }
		remove_province_modifier = tengri_influx_of_monks
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_abandoning_the_old_ways }
		remove_province_modifier = tengri_abandoning_the_old_ways
	}
	remove_country_modifier = tengri_devout_muslim
	remove_country_modifier = tengri_confucian_elites_alienated
	remove_country_modifier = tengri_confucian_titles
	remove_country_modifier = tengri_traditionalists_strengthened
	remove_country_modifier = tengri_confucian_nobles
	remove_country_modifier = tengri_pali_legal_traditions
	remove_country_modifier = tengri_religious_pilgrimages
	remove_country_modifier = tengri_monks_in_capital
	remove_country_modifier = tengri_influx_of_monks
	remove_country_modifier = tengri_shiite_immigration
	remove_country_modifier = support_of_the_khojas
	remove_country_modifier = black_shamanism_modifier
	remove_country_modifier = tengri_animist_pantheon
	remove_country_modifier = zoroastrian_traders
	remove_country_modifier = spread_of_tengri_tea_ceremony
	remove_country_modifier = tengri_tea_ceremony
	remove_country_modifier = tengri_japanese_swordsmithing
	remove_country_modifier = tengri_bow_and_arrow_defended
	remove_country_modifier = tengri_support_of_shamans
	remove_country_modifier = tengri_hindu_conflict
	remove_country_modifier = tengri_hindu_syncretism
	remove_country_modifier = tengri_devout_christian_ruler
	remove_country_modifier = tengri_personal_confessor
	remove_country_modifier = tengri_confucian_administrators
	remove_country_modifier = tengri_traditional_elites_alienated
	remove_country_modifier = tengri_jihad
	remove_country_modifier = tengri_stood_up_for_yassa
	remove_country_modifier = tengri_sufi_teacher
	remove_country_modifier = tengri_qadi
	remove_country_modifier = tengri_religious_influx
	remove_country_modifier = tengri_ibadi_scholars
	remove_country_modifier = tengri_clergy_conflicts
	remove_country_modifier = tengri_shamans_spurned
	clr_country_flag = khojas_established
	clr_country_flag = tengri_christian_devout_court
	clr_ruler_flag = tengri_muslim_ruler_questioned
	if = {
		limit = {
			check_variable = { which = khojas_retained value = 1 }
		}
		set_variable = {
			which = khojas_retained value = 0
		}
	}
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	country_event = { id = colonial_nation.90 days = 1 }
}

# country
on_colonial_reintegration = {
	events = {
		colonial_nation.91
	}
}

# country
on_peace_actor = {
	events = {
		native_americans.7		# Appoint Peace Chief
	}
}

# country
on_peace_recipient = {
	events = {
		native_americans.7		# Appoint Peace Chief
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
    FROM = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
    if = {
		limit = { 
			ROOT = { is_rival = FROM }  
			ROOT = { NOT = { religion_group = FROM } }
			current_age = high_middle_ages
		}
		set_country_flag = won_against_rival_of_other_religion_group
	}
	if = {
		limit = { 
			current_age = great_war_age
			FROM = { is_great_power = yes }
		}
		set_country_flag = won_against_great_power
	}
	change_variable = {
		which = war_won
		value = 1
	}
	change_variable = {
		which = num_of_wars_won
		value = 1
	}
    if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = {
					prestige = 40
				}
				NOT = {
					has_country_modifier = fc_treatyconference_timer
				}
			}
			add_country_modifier = {
				name = fc_treatyconference_timer
				duration = 3650
				hidden = yes
			}
			country_event = {
				id = free_cities.7
				days = 7
			}
		}
	}	
}

# country
# root = loser country, from = winner country
on_war_lost = {
    ROOT = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	if = {
        limit = {
            government = republic
            is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
    }
	change_variable = {
		which = war_lost
		value = 1
	}	
	add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
	}
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
    change_variable = {
		which = num_of_battles_won
		value = 1
	}	
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	battle_cult_spreading_effect = yes #Scripted effect for fetishist cult mechanics.
	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
    if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	random_events = {
		1000 = 0
	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	if = {
		limit = {
			unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			general_with_steam_name = yes #Unit Scope Trigger
		}
		unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {

}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	random_events = {
		1000 = 0
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		100 = 0
	}
	from = {
		if = {
		    limit = { base_tax = 2 base_production = 2 base_manpower = 2 }
			random_list = { 33 = { add_base_tax = -1 } 33 = { add_base_production = -1 } 33 = { add_base_manpower = -1 } }
		}
		else_if = {
		    limit = { base_tax = 2 base_production = 2 }
			random_list = { 50 = { add_base_tax = -1 } 50 = { add_base_production = -1 } }
		}
		else_if = {
		     limit = { base_tax = 2 base_manpower = 2 }
			random_list = { 50 = { add_base_tax = -1 } 50 = { add_base_manpower = -1 } }
		}
		else_if = {
		    limit = { base_production = 2 base_manpower = 2 }
			random_list = { 50 = { add_base_production = -1 } 50 = { add_base_manpower = -1 } }
		}
		else_if = {
		    limit = { base_tax = 2 }
			add_base_tax = -1
		}
		else_if = {
		    limit = { base_production = 2 }
			add_base_production = -1
		}
		else_if = {
		    limit = { base_manpower = 2 }
			add_base_manpower = -1
		}
		else = {
		    add_devastation = 10
		}
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	events = {
		curia.8
	}
}

# province
# root = location, from = losing country
on_siege_won_province = {
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	crimean_succession_effect = yes #Scripted effect
	slesvig_question_effect = yes #Scripted effect
	
	if = { limit = { religion_group = polytheistic_group } add_country_modifier = { name = "polytheistic_group_modifier" duration = -1 }
	remove_country_modifier = occult_group_modifier
	remove_country_modifier = elemental_group_modifier
	remove_country_modifier = daedric_group_1_modifier
	remove_country_modifier = harmony_group_modifier
	}
	if = { limit = { religion_group = occult_group } add_country_modifier = { name = "occult_group_modifier" duration = -1 }
	remove_country_modifier = polytheistic_group_modifier
	remove_country_modifier = elemental_group_modifier
	remove_country_modifier = daedric_group_1_modifier
	remove_country_modifier = harmony_group_modifier
	}
	if = { limit = { religion_group = elemental_group } add_country_modifier = { name = "elemental_group_modifier" duration = -1 }
	remove_country_modifier = polytheistic_group_modifier
	remove_country_modifier = occult_group_modifier
	remove_country_modifier = daedric_group_1_modifier
	remove_country_modifier = harmony_group_modifier
	}
	if = { limit = { religion_group = daedric_group_1 } add_country_modifier = { name = "daedric_group_1_modifier" duration = -1 }
	remove_country_modifier = polytheistic_group_modifier
	remove_country_modifier = occult_group_modifier
	remove_country_modifier = elemental_group_modifier
	remove_country_modifier = harmony_group_modifier
	}
	if = { limit = { religion_group = harmony_group } add_country_modifier = { name = "harmony_group_modifier" duration = -1 }
	remove_country_modifier = polytheistic_group_modifier
	remove_country_modifier = occult_group_modifier
	remove_country_modifier = elemental_group_modifier
	remove_country_modifier = daedric_group_1_modifier
	}

	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			has_consort_regency = no
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = {
			NOT = { has_dlc = "Mandate of Heaven" }
			has_country_modifier = the_mandate_of_heaven
			NOT = { legitimacy = 80 }
		}
		country_event = { id = china_events.32 }	# History of last ruler
	}
	ambrosian_republic_effect = yes
	succession_culture_religion_effect = yes
	sheik_ul_islam_effect = yes
	hab_remove_mission_mods_if_not_emperor_effect = yes
	thu_remain_von_wettin_effect = yes
	ladislaus_postumus_union_effect = yes								  
	events = {
		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers
	}
	random_events = {
		1000 = 0
		50 = dynastic_events.4
		50 = dynastic_events.5
		25 = harem_events.7
	}
}

on_new_consort = {
	country_event = { id = consort_events.2 }
	
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
}

# country
on_monarch_death = {
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}  
	burgundian_inheritance_start_effect = yes
	ladislaus_postumus_king_died_effect = yes	   
	events = {
	}
}

# country
on_regent = {
	events = {
		tribal_succession.1	# harsh anti-tribals.
	}
}

# country
on_new_term_election = {
	events = {
		700		# Election event
		elections.720		# Dutch Republic
		pirates.1
	}
}

# country
on_death_election = {
	if = {
		limit = { has_reform = presidential_despot_reform }
		remove_government_reform = presidential_despot_reform
		if = {
			limit = { NOT = { has_dlc = "Dharma" } }
			set_legacy_government = oligarchic_republic
		}
	}
	if = {
		limit = {
			has_reform = pirate_republic_reform
		}
		set_country_flag = pirate_death_election
		country_event = { id = pirates.1 }
	}
	events = {
		701		# Election event
		elections.721		# Dutch Republic
		elections.800	# Lottery election
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
		mamluk_events.0 # Choose new ruler
	}
}

# country
on_replace_governor = {
	events = {
		elections.707
	}
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		610
	}
	change_variable = {
		which = diplo_annexed_nation
		value = 1
	}		
}

# country
on_heir_death = {
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
	if = {
		limit = { has_country_flag = albrecht_achilles_flag }
		clr_country_flag = albrecht_achilles_flag #Death of original Albrecht Achilles
	}
	if = {
		limit = { has_ruler_flag = sancaga_cikma }
		clr_ruler_flag = sancaga_cikma
		every_owned_province = {
			limit = {
				has_province_modifier = heir_in_training
			}
			remove_province_modifier = heir_in_training
		}
	}
	if = {
		limit = { has_ruler_flag = returned_from_sancaga_sikma_province }
		clr_ruler_flag = returned_from_sancaga_sikma_province
	}
	ladislaus_postumus_heir_died_effect = yes									  
}

# country
on_queen_death = {

	if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}

	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	if = {
		limit = { has_ruler_modifier = bav_woman_scorned_mod }
		remove_country_modifier = bav_woman_scorned_mod
	}
	if = {
		limit = { has_ruler_modifier = bav_building_wife_church }
		remove_country_modifier = bav_building_wife_church
	}
	clr_ruler_flag = marriage_length
}

# country
on_new_heir = {
}

# country
on_weak_heir_claim = {
	events = {
		611		# Pretenders rise up
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		theocracy.1
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = Emperor
	}
	events = {
		900
	}
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor 
on_emperor_elected = {
	every_elector = {
		if = {
			limit = {
				preferred_emperor = root
			}
			change_variable = {
				which = supported_successive_emperors
				value = 1
			}
		}
		else = {
			set_variable = {
				which = supported_successive_emperors
				value = 0
			}
		}
	}

	emperor = {
		save_global_event_target_as = Emperor
	}
	FROM = {
		if = {
			limit = { has_country_modifier = diet_occupied }
			remove_country_modifier = diet_occupied
			ROOT = {
				add_country_modifier = { name = diet_occupied duration = -1 }
			}
		}
		if = {
			limit = {
				any_country = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
			every_country = {
				limit = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
				reverse_remove_opinion = {
					modifier = opinion_imperial_diplomacy
					who = prev
				}
				ROOT = {
					add_opinion = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
		}
	}
}
# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		909
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
		religious_leagues.1
		religious_leagues.8
	}
}

on_change_hre_religion = {
	events = {
		religious_leagues.2
		religious_leagues.3
	}
}

on_hre_religion_white_peace = {
	events = {
		religious_leagues.4
	}
}

# When a non-native changes government type
on_government_change = {
	clr_country_flag = pirate_mutineer_council
	clr_country_flag = caretaker_revolutionary_government												  
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = {
				has_province_modifier = domain_of_spouses_family
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = {
			NOT = { government = monarchy }
			any_owned_province = {
				has_province_modifier = home_of_consort
			}
		}
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
		   
		 
			 
			 
	
						 
										  
	
   
						  
			
										  
	
											
   
  if = {
		limit = { has_country_modifier = the_reign_of_terror }
		remove_country_modifier = the_reign_of_terror
	}
	if = {
		limit = {
			has_global_flag = great_peasants_war_flag
			is_part_of_hre = yes
			has_reform = peasants_republic
		}
		1 = {
			change_variable = {
				which = GPW_counting_variable
				value = -3
			}
		}
	}
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		610
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		celestial_empire_events.1 # Empire dismantled
	}
	change_variable = {
		which = annexed_nation
		value = 1
	}			
	FROM = {
		if = {
			limit = { is_emperor_of_china = yes }
			dismantle_empire_of_china = yes
			set_global_flag = empire_of_china_dismantled
		}
        if = {
			limit = { has_country_modifier = legatus_natus }
			remove_country_modifier = legatus_natus
			set_global_flag = no_legatus_natus
		}
		if = {
			limit = { has_country_modifier = primas_germaniae }
			remove_country_modifier = primas_germaniae
			set_global_flag = no_primas_germaniae
        }
	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	events = {

	}
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	save_global_event_target_as = EmperorOfChina
	if = {
		limit = {
			OR = {
				NOT = { government = monarchy }
				government = tribal
			}
		}
		change_government = monarchy
	}
	add_government_reform = celestial_empire
	set_mandate = 60
	add_country_modifier = {
		name = new_mandate_holder
		duration = 9125
	}
	if = {
		limit = {
			has_dlc = "Mandate of Heaven"
		}
		remove_faction = temples
		remove_faction = enuchs
		remove_faction = bureaucrats
	}
	if = {
		limit = {
			has_country_modifier = lost_mandate_of_heaven
		}
		remove_country_modifier = lost_mandate_of_heaven
	}
	country_event = { #Reforming the Bureaucracy
		id = china_events.31
		days = 365
	}
	country_event = {
		id = china_events.32 #Records of the last Empire
		days = 183
	}
	country_event = {
		id = celestial_empire_events.2
		days = 1825
	}
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	if = {
		limit = {
			has_dlc = "Dharma"
		}
		remove_government_reform = celestial_empire
	}
	else = {
		set_legacy_government = despotic_monarchy
	}
	set_government_rank = 2
	add_country_modifier = {
		name = lost_mandate_of_heaven
		duration = 7300	# 20 years
	}
	add_stability = -2
	if = {
		limit = {
			has_country_modifier = new_mandate_holder
		}
		remove_country_modifier = new_mandate_holder
	}
}

on_embrace_revolution = {
	if = {	
		limit = {
			any_subject_country = {
				has_country_modifier = colony_inspired_by_revolution
			}
		}
		every_subject_country = {
			remove_country_modifier = colony_inspired_by_revolution
		}
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government_to_republic = yes
	}
	if = {
		limit = { 
			revolution_target_exists = no
			is_great_power = yes
		}
		set_revolution_target = ROOT
		add_government_reform = revolutionary_republic_reform
		if = {
			limit = {
				any_country = {
					has_country_flag = last_revolutionary_country
				}
			}
			every_country = {
				limit = {
					has_country_flag = last_revolutionary_country
				}
				clr_country_flag = last_revolutionary_country
			}
		}
	}
	else = {
		add_government_reform = junior_revolutionary_republic_reform
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	kill_ruler = yes
	set_country_flag = revolutionary_republic_flag
	set_country_flag = had_revolution
}

on_dismantle_revolution = {
	events = {
		center_of_revolution.1500
	}
	if = {
		limit = {
			any_country = {
				has_country_flag = last_revolutionary_country
			}
		}
		every_country = {
			limit = {
				has_country_flag = last_revolutionary_country
			}
			clr_country_flag = last_revolutionary_country
		}
	}
	set_country_flag = last_revolutionary_country
}

# province
on_adm_development = {
}

# province
on_dip_development = {
}

# province
on_mil_development = {
}

on_overextension_pulse = {
	random_events = {
		100 = overextension.1
		100 = overextension.2
		100 = overextension.3
		100 = overextension.5
		100 = overextension.8
	}
}


on_colonial_pulse = {
	random_events = {
		100 = colonial.1
		100 = colonial.5
		100 = colonial.8
		100 = colonial.12
		100 = colonial.13
		100 = colonial.16
		100 = colonial.18

		10000 = 0
	}
}

on_siberian_pulse = {
}


# country random events
on_bi_yearly_pulse = {
	random_events = {
		# randomevents.txt
		100 = 5014
		100 = 5018
		100 = 5019
		100 = 5022
		100 = 5023
		100 = 5040
		100 = 5045
		100 = 5054
		100 = 5055
		100 = 5056
		100 = 5060
		100 = 5068
		100 = 5070
		100 = 5071
		100 = 5075
		100 = 5076
		100 = 5085
		100 = 5089
		100 = 5090
		100 = 5098
		100 = 6000
		100 = 6001
		100 = 6012
		100 = 6013
		100 = 712
		100 = 713
		100 = 714
		100 = 715
		100 = 716
		100 = 717
		100 = 719
		100 = 720
		100 = 722
		100 = 726
		100 = 727
		100 = 729
		100 = 740

		100 = 859
		100 = 860
		100 = 871
		100 = 872
		100 = 873
		100 = 877
		100 = 881
		100 = 837

		100 = 3097
		100 = 5005

		100 = random_event.3
		100 = random_event.9

		100 = random_event.26

		#Culture and Religion Events
		125 = culture_religion_events.1
		125 = culture_religion_events.2
		125 = culture_religion_events.11
		125 = culture_religion_events.12
		125 = culture_religion_events.20
		175 = culture_religion_events.21
		125 = culture_religion_events.22

		#Mamluk Events
		175 = mamluk_events.3
		235 = mamluk_events.4
		185 = mamluk_events.5
		185 = mamluk_events.11

		#Streltsy Events
		125 = streltsy_events.1
		125 = streltsy_events.4

		#Orthodox Metropolitans
		125 = patriarch_events.2
		75 = patriarch_events.4
		75 = patriarch_events.5

		# Old Centralisation/Decentralisation

		# Mercantilism
		100 = 6328

		# Trade Specific
		100 = trade.1
		100 = trade.11

		# Catholic  Events
		100 = catholic_flavor.6
		100 = catholic_flavor.8
		100 = catholic_flavor.9

		# Tradegoods events
		
		# Trade League Events
		100 = trade_league.1

		# Refoms, when having parliaments.

		100 = randomeventsstapehordes.1
		100 = randomeventsstapehordes.5
		100 = randomeventsstapehordes.8
		100 = randomeventsstapehordes.13
		100 = randomeventsstapehordes.14
		100 = randomeventsstapehordes.17
		100 = randomeventsstapehordes.18
		100 = randomeventsstapehordes.22

		# Sailor events

		# Corruption Events

		# Institution Events
		#Feudalism Spread Events:

		#Personality Events
		50 = personality_events.11 #A righteous King
		50 = personality_events.12 #A Righteous Republican Ruler
		50 = personality_events.17
		50 = personality_events.19
		50 = personality_events.21
		50 = personality_events.22
		50 = personality_events.30
		50 = personality_events.31
		50 = personality_events.35
		50 = personality_events.37
		50 = personality_events.44
		50 = personality_events.47
		50 = personality_events.52
		50 = personality_events.55
		50 = personality_events.57
		50 = personality_events.58

		#Industrial Revolution

		#Confucian Events
		75 = confucian_events.19
		75 = confucian_events.20

		# Orthodox Icon Events

		# Anglican Events
		100 = anglican_events.1
		100 = anglican_events.2
		100 = anglican_events.3
		100 = anglican_events.4
		100 = anglican_events.10
		100 = anglican_events.11
		150 = anglican_events.15

		# Innovativeness
		100 = innovativeness_events.3
		100 = innovativeness_events.4
		100 = innovativeness_events.5
		100 = innovativeness_events.8
		100 = innovativeness_events.9

		# Trade Company Investments
		100 = investment_events.4
		100 = investment_events.6
		100 = investment_events.9
		100 = investment_events.10

		# Minority Expulsion Events
		100 = expel_minority_events.1
		100 = expel_minority_events.2
		100 = expel_minority_events.3
		100 = expel_minority_events.4
		100 = expel_minority_events.5


		5000 = 0
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
		100 = corruption_event.1
		100 = corruption_event.2
		100 = corruption_event.4
		100 = corruption_event.5
		100 = corruption_event.9

		7500 = 0
	}
}

on_bi_yearly_pulse_3 = {
	
	if = {
	limit = {
	is_at_war = yes
	}
	add_faction_influence = {
    faction = es_warriors
    influence = 0.05
    }
	}
	
	if = {
	limit = {
	is_at_war = no
	}
	add_faction_influence = {
    faction = es_merchants
    influence = 0.05
    }
	}
	
	if = {
	limit = {
	stability = 1
	}
	add_faction_influence = {
    faction = es_clergy
    influence = 0.05
    }
	}
	
	if = {
	limit = {
	NOT = { stability = 0 }
	}
	add_faction_influence = {
    faction = es_merchants
    influence = -0.03
    }
	}
	
	if = {
	limit = {
	average_unrest = 10
	}
	add_faction_influence = {
    faction = es_warriors
    influence = -0.03
    }
	}
	
	if = {
	limit = {
	NOT = { religious_unity = 0.95 }
	}
	add_faction_influence = {
    faction = es_clergy
    influence = -0.03
    }
	}
	
	if = {
	limit = {
	government = republic
	}
	add_faction_influence = {
    faction = es_merchants
    influence = 0.03
    }
	}
	
	if = {
	limit = {
	government = monarchy
	}
	add_faction_influence = {
    faction = es_warriors
    influence = 0.03
    }
	}
	
	if = {
	limit = {
	government = theocracy
	}
	add_faction_influence = {
    faction = es_clergy
    influence = 0.03
    }
	}
	
	if = {
	limit = {
	army_tradition = 50
	}
	add_faction_influence = {
    faction = es_warriors
    influence = 0.05
    }
	}
	
	if = {
	limit = {
	navy_tradition = 50
	}
	add_faction_influence = {
    faction = es_merchants
    influence = 0.05
    }
	}
	
}

on_bi_yearly_pulse_4 = {
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
		# Republics
		100 = republics.6
		100 = republics.7
		100 = republics.9
		100 = republics.13
		100 = republics.15
		100 = republics.21
		100 = republics.28
		100 = republics.29
		100 = republics.36
		100 = republics.43

		# Theocracies
		100 = devotion_events.1
		100 = devotion_events.2
		100 = devotion_events.3
		100 = devotion_events.4
		100 = devotion_events.5
		100 = devotion_events.6
		100 = devotion_events.8
		100 = devotion_events.9
		100 = devotion_events.10
		100 = devotion_events.11
		100 = devotion_events.12
		100 = devotion_events.13
		100 = devotion_events.14
		100 = devotion_events.15

		# China
		75 = meritocracy_events.2
		75 = meritocracy_events.3
		75 = meritocracy_events.4

		5000 = 0
	}
}

on_thri_yearly_pulse_2 = {
	random_events = {
		# Random to increase or decrease patriarch authority.
		25 = orthodox_flavor.1
		25 = orthodox_flavor.2
		25 = orthodox_flavor.3
		25 = orthodox_flavor.4
		25 = orthodox_flavor.5

		# Muslim Piety Events
		40 = muslim_piety.1
		40 = muslim_piety.3
		20 = muslim_piety.4
		40 = muslim_piety.5
		40 = muslim_piety.8
		40 = muslim_piety.9
		40 = muslim_piety.10
		40 = muslim_piety.11
		40 = muslim_piety.12
		40 = muslim_piety.13
		40 = muslim_piety.14
		40 = muslim_piety.15
		40 = muslim_piety.16
		300 = 0
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
		# Subject Interactions
		50 = subject_interaction_events.1
		50 = subject_interaction_events.14
		50 = subject_interaction_events.15
		50 = subject_interaction_events.26
		50 = subject_interaction_events.31
		50 = subject_interaction_events.40
		75 = tributary_events.1
		75 = tributary_events.4
		75 = tributary_events.6
		75 = tributary_events.10
		75 = tributary_events.18
		75 = tributary_events.23
		75 = tributary_events.26

		5000 = 0
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		#Low Mandate Events
		10 = china_events.46
		10 = china_events.49
		10 = china_events.50
		50 = china_events.51
		10 = china_events.52
	}
}

on_four_year_pulse = {
	random_events = {
		# Colonial Nations
		100 = colonial_nation.1
		100 = colonial_nation.4
		100 = colonial_nation.10
		100 = colonial_nation.12
		100 = colonial_nation.14
		100 = colonial_nation.77

		# Dutch Republic
		100 = dutch_republic.1
		100 = dutch_republic.3
		100 = dutch_republic.9
		100 = dutch_republic.16
		100 = dutch_republic.20
		100 = dutch_republic.23
		100 = dutch_republic.24
		100 = dutch_republic.25

		# Republic Factions
		100 = republic_factions.2
		100 = republic_factions.5
		100 = republic_factions.7
		100 = republic_factions.9
		100 = republic_factions.10
		100 = republic_factions.12
		100 = republic_factions.13
		100 = republic_factions.14
		100 = republic_factions.15
		100 = republic_factions.16
		100 = republic_factions.17

		# Pirate Factions
		100 = pirates.10
		100 = pirates.11
		100 = pirates.12
		100 = pirates.13
		100 = pirates.14
		100 = pirates.15
		100 = pirates.16
		100 = pirates.17
		100 = pirates.18
		100 = pirates.19

		# Republican Dictatorship
		100 = republican_dictatorship.1
		100 = republican_dictatorship.2
		100 = republican_dictatorship.3
		100 = republican_dictatorship.4
		100 = republican_dictatorship.5

		# Elective Monarchy
		150 = elective_monarchy.1
		150 = elective_monarchy.2
		25 = elective_monarchy.3
		25 = elective_monarchy.4
		150 = elective_monarchy.6
		150 = elective_monarchy.8
		150 = elective_monarchy.9
		150 = elective_monarchy.10
		150 = elective_monarchy.11
		150 = elective_monarchy.12
		150 = elective_monarchy.14
		150 = elective_monarchy.17
		25 = elective_monarchy.18

		# Free Cities
		25 = free_cities.3
		25 = free_cities.7
		25 = free_cities.8
		25 = free_cities.10
		25 = free_cities.13
		25 = free_cities.17
		25 = free_cities.19

		#Empire of China
		100 = china_events.3
		100 = china_events.13
		100 = china_events.20
		100 = china_events.27
		100 = china_events.30
		100 = china_events.37
		100 = china_events.38
		100 = china_events.41

		5000 = 0
	}
}

on_four_year_pulse_2 = {
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
	random_events = {

		# Innovativeness Events

		# Aristocracy 		13  (8g 5b)
		100 = ideagroups.100
		100 = ideagroups.102
		100 = ideagroups.110


		# Plutocracy 		19 (12g 7b)
		100 = ideagroups.206
		100 = ideagroups.211
		100 = ideagroups.216

		# Innovativenes		11 (7g 4b)
		100 = ideagroups.300
		100 = ideagroups.304
		100 = ideagroups.305

		# Religious		18 (11g 7b)
		100 = ideagroups.401
		100 = ideagroups.406
		100 = ideagroups.414


		# Spy			9 (6g 3b)
		100 = ideagroups.501
		100 = ideagroups.505
		100 = ideagroups.506


		# Diplomatic		9 (6g 3b)
		100 = ideagroups.600
		100 = ideagroups.606
		100 = ideagroups.607


		# Offensive 		14 (9g 5b)
		100 = ideagroups.700
		100 = ideagroups.702
		100 = ideagroups.705


		# Defensive		11 (5g 6b)
		100 = ideagroups.803
		100 = ideagroups.808
		100 = ideagroups.810


		# Trade			6 (7g 4b)
		100 = ideagroups.900
		100 = ideagroups.909
		100 = ideagroups.910

		# Maritime			22 (14g 8b)
		100 = ideagroups.1003
		100 = ideagroups.1013
		100 = ideagroups.1016

		# Economic		11 (7g 4b)
		100 = ideagroups.1100
		100 = ideagroups.1102
		100 = ideagroups.1103

		# Exploration		11 (7g 4b)
		100 = ideagroups.1200
		100 = ideagroups.1201
		100 = ideagroups.1206

		# Quality		11 (7g 4b)
		100 = ideagroups.1301
		100 = ideagroups.1303
		100 = ideagroups.1309

		# Quantity		11 (7g 4b)
		100 = ideagroups.1401
		100 = ideagroups.1410

		# Expansion		11 (7g 4b)
		100 = ideagroups.1506
		100 = ideagroups.1507
		100 = ideagroups.1510

		# Administrative	3 (1g 2b)
		100 = ideagroups.1601
		100 = ideagroups.1607
		100 = ideagroups.1609

		# Naval		11 (7g 4b)
		100 = ideagroups.1702
		100 = ideagroups.1703
		100 = ideagroups.1709

		# Influence		11 (7g 4b)
		100 = ideagroups.1800
		100 = ideagroups.1805
		100 = ideagroups.1808

		# Humanist		11 (7g 4b)
		100 = ideagroups.1900
		100 = ideagroups.1901

		5000 = 0
	}

	events = {
	}
}


# Estates pulse
on_five_year_pulse_2 = {
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
			#Regional Variations:
			100 = church_estate_events.104
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Cossacks
		100 = cossack_estate_events.1
		#100 = cossack_estate_events.2 (triggers in neighbor country)
		100 = cossack_estate_events.6
		100 = cossack_estate_events.7
		100 = cossack_estate_events.8
		100 = cossack_estate_events.9
		100 = cossack_estate_events.10
		100 = cossack_estate_events.11
		400 = cossack_estate_events.12 #Disloyal
		100 = cossack_estate_events.13
		400 = cossack_estate_events.14 #Demands
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands
	}
}

on_five_year_pulse_3 = {
	random_events = {
		100 = propagate_religion_events.4
		100 = propagate_religion_events.9
		100 = propagate_religion_events.10
		#100 = propagate_religion_events.11 #Province event
		3500 = 0
	}
}

on_five_year_pulse_4 = {
}

# El Dorado
on_explore_coast = {
}
on_conquistador_empty = {
}

on_conquistador_native = {
}

on_buy_religious_reform = {
	events = {
		religious_reforms.1
		religious_reforms.2
		religious_reforms.3
	}
}

on_circumnavigation = {
	events = {
		exploration_events.17
		exploration_events.16 #First Circumnavigation Europe
	}
}

on_become_free_city = {
	events = {
		free_cities.1
	}
}

on_remove_free_city = {
	events = {
		free_cities.2
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	add_permanent_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	add_permanent_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
	if = {
		limit = {
			has_estate = estate_cossacks
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_cossacks
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = cossack_rebels
			size = 1
		}
		province_event = { id = cossack_estate_events.15 }
	}
	if = {
		limit = {
			has_estate = estate_church
			has_owner_religion = yes
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_church
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = religious_rebels
			size = 1
		}
		province_event = { id = church_estate_events.11 }
	}
	if = {
		limit = {
			has_estate = estate_church
			has_owner_religion = no
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_church
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = particularist_rebels
			size = 1
		}
		province_event = { id = church_estate_events.11 }
	}
	if = {
		limit = {
			has_estate = estate_nobles
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_nobles
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = noble_rebels
			size = 1
		}
		province_event = { id = nobles_estate_events.12 }
	}
	if = {
		limit = {
			has_estate = estate_burghers
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = particularist_rebels
			size = 1
		}
		province_event = { id = burghers_estate_events.16 }
	}
	if = {
		limit = {
			has_estate = estate_nomadic_tribes
			owner = {
				NOT = {
					estate_loyalty = {
						estate = estate_nomadic_tribes
						loyalty = 40
					}
				}
			}
		}
		spawn_rebels = {
			type = tribal_rebels
			size = 1
		}
		province_event = { id = tribal_estate_events.10 }
	}
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}
on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = {
		limit = {
			has_province_modifier = revoked_estate_modifier
		}
		remove_province_modifier = revoked_estate_modifier
	}
}

on_death_has_harem = {
    if = {
		limit = {
			has_heir = no
		}
		country_event = { id = harem_events.2 }
	}
}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {
	country_event = { id = fetishist_flavor.302 days = 10 } #removing tomb if incompatible cult is picked
	country_event = { id = fetishist_flavor.304 days = 10 } #rebuilding tomb if lost
	if = {
		limit = {
			has_country_flag = lost_ancestral_lands
			NOT = { has_adopted_cult = zanahary_cult }
			NOT = { has_adopted_cult = central_african_ancestor_cult }
		}
		clr_country_flag = lost_ancestral_lands
	}
}

# country
on_gain_great_power_status = {
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted = {
    owner = {
		change_variable = {
			which = religions_converted
			value = 1
		}
	}
}

# province
on_province_culture_converted = {
    owner = {
		change_variable = {
			which = cultures_converted
			value = 1
		}
	}
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
}

# province
# FROM = old owner
on_province_owner_change = {
    owner = {
		change_variable = {
			which = provinces_gained
			value = 1
		}
	if = {
		limit = {
			OR = {
				has_province_modifier = wine_bonus_prod
				has_province_modifier = grain_bonus_prod
			}
			FROM = { has_reform = monastic_breweries_reform }
			NOT = { owner = { has_reform = monastic_breweries_reform } }
		}
		remove_province_modifier = wine_bonus_prod
		remove_province_modifier = grain_bonus_prod
	}   
	}
	if = {
		limit = {
			NOT = {
				OR = {
					has_province_modifier = wine_bonus_prod
					has_province_modifier = grain_bonus_prod
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					trade_goods = wine
				}
				add_province_modifier = { 
					name = wine_bonus_prod
					duration = -1
					hidden = yes
				}
			}
			if = {
				limit = {
					trade_goods = grain
				}
				add_province_modifier = { 
					name = grain_bonus_prod
					duration = -1
					hidden = yes
				}
			}
		}
	}
    on_province_owner_change_estate_privileges_effect = yes
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

# country
on_harmonized_polytheistic_group = {
	events = {
		confucian_events.101
	}
}
on_harmonized_occult_group = {
	events = {
		confucian_events.102
	}
}
on_harmonized_elemental_group = {
	events = {
		confucian_events.103
	}
}
on_harmonized_daedric_group_1 = {
	events = {
		confucian_events.104
	}
}

# country
on_russian_sudebnik = {

}

# country
on_russian_oprichnina = {

}

# country
on_russian_streltsy = {

}

# province
on_consecrate_patriarch = {
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
}

# country
on_general_recruited = {
	add_army_professionalism = 0.01
}

# country
on_admiral_recruited = {
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
}

# THIS = Province, FROM = Country
on_regiment_recruited = {

}

# THIS = Province, FROM = Country
on_mercenary_recruited = {
	FROM = {
		add_army_professionalism = -0.05
	}
}

# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
	hidden_effect = {
		owner = {
			save_event_target_as = province_owner
		}
		remove_province_modifier = pasha_removed_modifier
	}

	area = {
		limit = { owned_by = event_target:province_owner }
		add_or_extend_province_modifier_effect = { MODIFIER = pasha_removed_modifier DURATION = 3650 }
	}
}

# THIS = Province
on_janissaries_raised = {
}

on_revolutionary_guard_raised = {
}								 
on_reform_enacted = {
}

on_reform_changed = {
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
    change_variable = {
		which = cot_upgraded
		value = 1
	}
}

on_center_of_trade_downgrade = {

}

on_culture_promoted = {
    change_variable = {
		which = culture_promoted
		value = 1
	}
}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	events = {
		dutch_republic.31 # States General falls under a PU
	}
}

# ROOT = Overlord, FROM = Minor
on_dependency_lost = {

}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	if = {
		limit = {
	    has_dlc = "Emperor"
			FROM = {
				is_revolutionary = yes
			}
		}
		change_government = republic
		add_government_reform = junior_revolutionary_republic_reform
		set_country_flag = had_revolution
	}
	if = {
		limit = {	   
			tag = RED
		}
		change_government = theocracy
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {

}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {

}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	FROM = {
		country_event = { id = flagship_events.1 }
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.4 }
	}
	FROM = {
		country_event = { id = flagship_events.3 }
	}
}

# this = Released country, FROM = Releasing country
on_country_released = {
	if = {
		limit = {
			tag = RED
		}
		change_government = theocracy
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			FROM = { has_reform = religious_permanent_revolution_reform }
			NOT = { tag = RED }
		}
		change_religion = FROM
		adopt_reform_progress = FROM
		add_country_modifier = {
			name = global_holy_war_released_modifier
			duration = 3650
			hidden = yes
		}
		capital_scope = {
			change_religion = FROM
		}
	}
}

# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
	if = {
		limit = {
			OR = {
				has_province_modifier = wine_bonus_prod
				has_province_modifier = grain_bonus_prod
			}
			FROM = { has_reform = monastic_breweries_reform }
			NOT = { owner = { has_reform = monastic_breweries_reform } }
		}
		remove_province_modifier = wine_bonus_prod
		remove_province_modifier = grain_bonus_prod
	}
	hidden_effect = {
		if = {
			limit = {
				trade_goods = wine
			}
			remove_province_modifier = grain_bonus_prod
			add_province_modifier = { 
				name = wine_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = grain
			}
			remove_province_modifier = wine_bonus_prod
			add_province_modifier = { 
				name = grain_bonus_prod
				duration = -1
				hidden = yes
			}
		}
	}
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
}

# this = country
on_rebels_break_country = {
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
}
# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {

}

# this = country
on_post_dip_advisor_fired = {
	
}

# this = country
on_post_mil_advisor_fired = {
	
}

# this = new client state, from = parent country
on_create_client_state = {
	if = {
		limit = {
			has_dlc = "Emperor"
			FROM = {
				is_revolutionary = yes
			}
			government = republic
		}
		add_government_reform = junior_revolutionary_republic_reform
		set_country_flag = had_revolution
	}
}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
	if = {
		limit = { has_reform = junior_revolutionary_republic_reform }
		add_government_reform = revolutionary_republic_reform
	}
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}


# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
}

on_country_creation = {
	if = {
		limit = {
			tag = RED
			OR = {
				NOT = {
					religion = chimer_pantheon
				}
				NOT = {
					has_reform = papacy_reform
				}
				NOT = {
					government = theocracy
				}
			}
		}
		change_religion = chimer_pantheon
		change_government = theocracy
		add_government_reform = papacy_reform
	}
}